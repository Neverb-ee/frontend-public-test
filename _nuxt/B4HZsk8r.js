import{d as _,K as C,S as b,T as h,p as y,U as x,j as p,c as m,C as d,e as k,o as g,w as f,r as v,n as T,g as s,P as w,V as B,W as M,f as $,q,_ as O,m as S,l as P}from"./brkKTK4Q.js";const V=Symbol.for("nuxt:client-only"),A=_({name:"ClientOnly",inheritAttrs:!1,props:["fallback","placeholder","placeholderTag","fallbackTag"],setup(r,{slots:a,attrs:l}){const n=C(!1);b(()=>{n.value=!0});const e=h();return e&&(e._nuxtClientOnly=!0),x(V,!0),t=>{var c;if(n.value)return(c=a.default)==null?void 0:c.call(a);const o=a.fallback||a.placeholder;if(o)return o();const u=t.fallback||t.placeholder||"",i=t.fallbackTag||t.placeholderTag||"span";return y(i,l,u)}}}),N={base:"w-full max-w-(--ui-container) mx-auto px-4 sm:px-6 lg:px-8"},D={__name:"Container",props:{as:{type:null,required:!1},class:{type:null,required:!1}},setup(r){const a=r,l=p(),n=m(()=>{var e;return d({extend:d(N),...((e=l.ui)==null?void 0:e.container)||{}})});return(e,t)=>(g(),k(s(w),{as:r.as,class:T(n.value({class:a.class}))},{default:f(()=>[v(e.$slots,"default")]),_:3},8,["as","class"]))}},L=Object.assign({inheritAttrs:!1},{__name:"ColorModeButton",props:{color:{type:null,required:!1,default:"neutral"},variant:{type:null,required:!1,default:"ghost"}},setup(r){const{t:a}=B(),l=M(),n=p(),e=m({get(){return l.value==="dark"},set(t){l.preference=t?"dark":"light"}});return(t,o)=>{var c;const u=O,i=A;return(c=s(l))!=null&&c.forced?$("",!0):(g(),k(i,{key:0},{fallback:f(()=>[v(t.$slots,"fallback",{},()=>[o[1]||(o[1]=P("div",{class:"size-8"},null,-1))])]),default:f(()=>[q(u,S({icon:e.value?s(n).ui.icons.dark:s(n).ui.icons.light,color:r.color,variant:r.variant,"aria-label":e.value?s(a)("colorMode.switchToLight"):s(a)("colorMode.switchToDark")},t.$attrs,{onClick:o[0]||(o[0]=j=>e.value=!e.value)}),null,16,["icon","color","variant","aria-label"])]),_:3}))}}});export{L as _,D as a};
